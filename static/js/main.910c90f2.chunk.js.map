{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setIsStarted","isReversed","setIsReversed","NONE","sortType","setSortType","goods","visibleGoods","ALPABET","sort","g1","g2","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,oDAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAWMC,EA1CR,SACEA,EACAF,EACAH,GAEA,IAAMM,EAAY,YAAOD,GAgBzB,OAdIF,IAAaT,EAASQ,OACpBC,IAAaT,EAASa,SACxBD,EAAaE,MAAK,SAACC,EAAIC,GACrB,OAAOD,EAAGE,cAAcD,MAIxBP,IAAaT,EAASkB,QACxBN,EAAaE,MAAK,SAACC,EAAIC,GACrB,OAAOD,EAAGI,OAASH,EAAGG,WAKxBb,EACKM,EAAaQ,UAGfR,EAiBOS,CAAkBpB,EAAiBQ,EAAUH,GAE3D,OACE,qBAAKgB,UAAU,MAAf,SACIlB,EAWE,qCACE,wBACEmB,KAAK,SACLC,QAzBK,kBAAMd,EAAYV,EAASa,UAuBlC,iCAOA,wBAAQU,KAAK,SAASC,QA7BjB,kBAAMd,EAAYV,EAASkB,SA6BhC,4BAIA,wBAAQK,KAAK,SAASC,QAnChB,kBAAMjB,GAAeD,IAmC3B,qBAIA,wBAAQiB,KAAK,SAASC,QApClB,WACZjB,GAAc,GACdG,EAAYV,EAASQ,OAkCb,mBAIA,oBAAIc,UAAU,QAAd,SACGX,EAAMc,KAAI,SAAAC,GACT,OACE,oBACEJ,UAAU,cADZ,SAIGI,GAFIA,WAlCf,wBACEH,KAAK,SACLC,QAjBI,kBAAMnB,GAAa,IAezB,sBCpEVsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.910c90f2.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    if (sortType === SortType.ALPABET) {\n      visibleGoods.sort((g1, g2) => {\n        return g1.localeCompare(g2);\n      });\n    }\n\n    if (sortType === SortType.LENGTH) {\n      visibleGoods.sort((g1, g2) => {\n        return g1.length - g2.length;\n      });\n    }\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const start = () => setIsStarted(true);\n  const reverse = () => setIsReversed(!isReversed);\n  const alphabet = () => setSortType(SortType.ALPABET);\n  const length = () => setSortType(SortType.LENGTH);\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const goods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"App\">\n      {!isStarted\n        ? (\n          <button\n            type=\"button\"\n            onClick={start}\n          >\n            Start\n          </button>\n        )\n\n        : (\n          <>\n            <button\n              type=\"button\"\n              onClick={alphabet}\n            >\n              Sort alphabetically\n            </button>\n\n            <button type=\"button\" onClick={length}>\n              Sort by length\n            </button>\n\n            <button type=\"button\" onClick={reverse}>\n              Reverse\n            </button>\n\n            <button type=\"button\" onClick={reset}>\n              Reset\n            </button>\n\n            <ul className=\"Goods\">\n              {goods.map(good => {\n                return (\n                  <li\n                    className=\"Goods__item\"\n                    key={good}\n                  >\n                    {good}\n                  </li>\n                );\n              })}\n            </ul>\n          </>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}