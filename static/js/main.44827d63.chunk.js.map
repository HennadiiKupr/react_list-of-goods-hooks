{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isStarted","setIsStarted","isReversed","setIsReversed","NONE","sortType","setSortType","goods","visibleGoods","ALPABET","sort","g1","g2","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,oEAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAgCE,IAAME,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAWMC,EAxCR,SACEA,EACAF,EACAH,GAEA,IAAMM,EAAY,YAAOD,GAczB,OAZIF,IAAaT,EAASa,SACxBD,EAAaE,MAAK,SAACC,EAAIC,GACrB,OAAOD,EAAGE,cAAcD,MAIxBP,IAAaT,EAASkB,QACxBN,EAAaE,MAAK,SAACC,EAAIC,GACrB,OAAOD,EAAGI,OAASH,EAAGG,UAItBb,EACKM,EAAaQ,UAGfR,EAiBOS,CAAkBpB,EAAiBQ,EAAUH,GAE3D,OACE,qBAAKgB,UAAU,uCAAf,SAMIlB,EAgBE,sBAAKkB,UAAU,sCAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QApCG,kBAAMd,EAAYV,EAASa,UAqC9BS,UAAWG,IACT,SACA,CAAE,aAAchB,IAAaT,EAASa,UAL1C,iCAWA,wBACEU,KAAK,SACLC,QA9CC,kBAAMd,EAAYV,EAASkB,SA+C5BI,UAAWG,IAAG,SACZ,CAAE,aAAchB,IAAaT,EAASkB,SAJ1C,4BASA,wBACEK,KAAK,SACLC,QAzDE,kBAAMjB,GAAeD,IA0DvBgB,UAAWG,IAAG,SACZ,CAAE,aAAcnB,IAJpB,qBASA,wBACEiB,KAAK,SACLC,QA/DA,WACZjB,GAAc,GACdG,EAAYV,EAASQ,OA8DTc,UAAU,SAHZ,sBASF,oBAAIA,UAAU,QAAd,SACGX,EAAMe,KAAI,SAAAC,GACT,OACE,oBACEL,UAAU,cADZ,SAIGK,GAFIA,WA3Df,wBACEJ,KAAK,SACLC,QAtBI,kBAAMnB,GAAa,IAuBvBiB,UAAU,kCAHZ,sBCxEVM,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.44827d63.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from 'react';\nimport './App.css';\nimport cn from 'classnames';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPABET) {\n    visibleGoods.sort((g1, g2) => {\n      return g1.localeCompare(g2);\n    });\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((g1, g2) => {\n      return g1.length - g2.length;\n    });\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const start = () => setIsStarted(true);\n  const reverse = () => setIsReversed(!isReversed);\n  const alphabet = () => setSortType(SortType.ALPABET);\n  const length = () => setSortType(SortType.LENGTH);\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const goods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  return (\n    <div className=\"\n      App\n      level\n      is-flex-direction-column\n      \"\n    >\n      {!isStarted\n        ? (\n          <button\n            type=\"button\"\n            onClick={start}\n            className=\"\n              button\n              is-outlined\n              level-item\n            \"\n          >\n            Start\n          </button>\n        )\n\n        : (\n          <div className=\"level-item is-flex-direction-column\">\n            <div className=\"buttons\">\n              <button\n                type=\"button\"\n                onClick={alphabet}\n                className={cn(\n                  'button',\n                  { 'is-success': sortType === SortType.ALPABET },\n                )}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={length}\n                className={cn('button',\n                  { 'is-success': sortType === SortType.LENGTH })}\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={reverse}\n                className={cn('button',\n                  { 'is-success': isReversed })}\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={reset}\n                className=\"button\"\n              >\n                Reset\n              </button>\n            </div>\n\n            <ul className=\"Goods\">\n              {goods.map(good => {\n                return (\n                  <li\n                    className=\"Goods__item\"\n                    key={good}\n                  >\n                    {good}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}